import requests
import csv
import json
import os

url = "https://bazaar.abuse.ch/export/csv/recent/"
output_file = "data/sample_malware_hashes.json"

try:
    response = requests.get(url, timeout=30)
    response.raise_for_status()
except requests.exceptions.RequestException as e:
    print(f"Error fetching data: {e}")
    exit()

decoded_content = response.content.decode('utf-8')
lines = decoded_content.splitlines()

header = []
data_lines_start_index = -1

# 헤더 행과 데이터 시작 위치를 정확히 찾기
for i, line in enumerate(lines):
    stripped_line = line.strip()
    if stripped_line.startswith('# "first_seen_utc"'):
        # 헤더에서 '# ' 부분을 제거하고, 쉼표로 분리한 뒤, 각 필드의 따옴표를 제거
        header = [h.strip('"') for h in stripped_line[2:].split(',')]
    elif not stripped_line.startswith('#'):
        data_lines_start_index = i
        break

if not header:
    print("Fatal: Could not find the header line in the CSV data.")
    exit()

if data_lines_start_index == -1:
    print("Fatal: Could not find any data lines in the CSV data.")
    exit()

# csv.reader를 사용하여 따옴표로 묶인 필드를 안전하게 파싱
# DictReader 대신 수동으로 딕셔너리 생성
reader = csv.reader(lines[data_lines_start_index:], quotechar='"', delimiter=',')

malware_list = []
for row_values in reader:
    # 헤더와 데이터 값을 짝지어 딕셔너리 생성
    row_dict = dict(zip(header, row_values))
    
    malware_info = {
        "sha256_hash": row_dict.get("sha256_hash"),
        "md5_hash": row_dict.get("md5_hash"),
        "sha1_hash": row_dict.get("sha1_hash"),
        "first_seen_utc": row_dict.get("first_seen_utc"),
        "signature": row_dict.get("signature"),
        "file_type": row_dict.get("file_type_guess"),
        "tags": row_dict.get("tags"),
    }
    malware_list.append(malware_info)

    # 200개 샘플 제한
    if len(malware_list) >= 200:
        break

os.makedirs(os.path.dirname(output_file), exist_ok=True)
with open(output_file, "w") as f:
    json.dump(malware_list, f, indent=2)

print(f"Successfully saved {len(malware_list)} records to {output_file}")
